<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
    <link href="/css/style.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css"
        integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
</head>

<body>
    <div class="row background">
        <%- include('../components/adminNav.ejs')%>
            <div class="col-9">
                <div class="container">
                    <div class="table-responsive">
                        <table class="table align-middle">
                            <div>
                                <h3>Product</h3>
                                <%- include('../createForm/product.ejs')%>
                            </div>
                            <thead>
                                <tr>
                                    <th>No.</th>
                                    <th>Name</th>
                                    <th>Amount</th>
                                    <th>Price</th>
                                    <th>Category</th>
                                    <th>Description</th>
                                    <th>Image</th>
                                    <th>Edit</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% for(var i=0; i<products.length;i++) { %>
                                    <tr>
                                        <td>
                                            <%=i+1%>
                                        </td>
                                        <td>
                                            <%=products[i].name%>
                                        </td>
                                        <td>
                                            <%=products[i].amount%>
                                        </td>
                                        <td>
                                            <%=products[i].price%>
                                        </td>
                                        <td>
                                            <%products[i].categoryProduct.forEach(function(category){%>
                                                <%=category.category.name%>,
                                                    <%})%>
                                        </td>
                                        <td>
                                            <%=products[i].description%>
                                        </td>
                                        <td>
                                            <%products[i].productImage.forEach(function(img){%>
                                                <img width="100px" src="<%=img.href%>" alt="">
                                                <%})%>
                                        </td>
                                        <td>
                                            <%- include('../components/modalProduct.ejs', {product:products[i]})%>
                                        </td>
                                    </tr>
                                    <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
    </div>
</body>
<script src="https://code.jquery.com/jquery-3.5.0.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js"
    integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
    crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js"
    integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
    crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js "
    integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1 "
    crossorigin="anonymous "></script>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js "
    integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1 "
    crossorigin="anonymous "></script>

<script>
    function createProduct() {
        const formData = new FormData();
        const name = $(`#CProduct-name`).val();
        formData.append('name', name);
        const amount = $(`#CProduct-amount`).val();
        formData.append('amount', amount);
        const price = $(`#CProduct-price`).val();
        formData.append('price', price);
        const description = $(`#CProduct-description`).val();
        formData.append('description', description);
        const categoryId = $(`input[type=checkbox]:checked`).map(function (_, el) {
            return $(el).val();
        }).get();
        formData.append('categoryId', categoryId);
        const files = document.getElementById(`CProduct-images`)
        for (let i = 0; i < files.files.length; i++) {
            formData.append('images', files.files[i]);
        }
        axios.post('/api/product', formData, {
            headers: {
                'Content-Type': 'multipart/form-data'
            }
        })
            .then(function (response) {
                console.log("ðŸš€ ~ file: product.ejs ~ line 123 ~ response", response)
                if (response.status == 200) {
                    Swal.fire({
                        title: 'Created!',
                        text: response.data.message,
                        icon: 'success',
                        confirmButtonText: 'Cool'
                    }).then(() => {
                        window.location.href = '/productView'
                    })
                }
            })
            .catch(function (error) {
                Swal.fire({
                    title: 'Something went wrong',
                    text: response.data.message,
                    icon: 'error',
                })
            });
    }
    function detailProduct(id) {
        //get Category Product to compare the exist account
        const insertImageProduct = $('.image-product-' + id);
        axios.get('/api/product/' + id).then(res => {
            var checkCategoryProduct = document.getElementsByClassName(`form-check-input-category` + id);
            console.log('checkExistCategory', res.data.message)
            // console.log('checkCategoryProduct', checkCategoryProduct)
            for (let j = 0; j < checkCategoryProduct.length; j++) {
                for (let i = 0; i < res.data.message.categoryProduct.length; i++) {
                    if (checkCategoryProduct[j].attributes[2].value == res.data.message.categoryProduct[i].categoryId) {
                        checkCategoryProduct[j].checked = true
                    }
                }
            }
            //neu co anh
            for (let i = 0; i < res.data.message.productImage.length; i++) {
                const linkImg = res.data.message.productImage[i].href;
                console.log(linkImg)
                const idImg = res.data.message.productImage[i].id;
                let defaultImg = "";
                if (res.data.message.productImage[i].isDefault == true) {
                    defaultImg = "borderImg";
                }
                insertImageProduct.append(`<img class='${defaultImg}' style="cursor: pointer" onclick="mainImg('mainImg-${idImg}')" id="mainImg-${idImg}" width="120px" src='${linkImg}'/>`) //add images to modal
                const newImgs = document.querySelectorAll('div.list-img-product img')
                newImgs.forEach(el => {
                    const current = document.getElementsByClassName('borderImg');
                    el.addEventListener("click", function (e) {
                        console.log('e.target', e.target.id) //target img
                        if (!current.length) {
                            this.classList.add('borderImg');
                        }
                        else {
                            current[0].classList.remove('borderImg');
                            e.target.classList.add('borderImg');
                        }
                    })
                })
            }
        })

    }

    function updateProduct(id) {
        const name = $(`#product-name-${id}`).val();
        const amount = $(`#amount-${id}`).val();
        const price = $(`#price-${id}`).val();
        const description = $(`#description-${id}`).val();
        const categoryId = $(`input[type=checkbox]:checked`).map(function (_, el) {
            return $(el).val();
        }).get();
        axios.put('/api/product/' + id, {
            name: name,
            description: description,
            amount: amount,
            price: price,
            categoryId: categoryId,
        })
            .then(function (response) {
                if (response.status == 200) {
                    Swal.fire({
                        title: 'Updated!',
                        text: response.data.message,
                        icon: 'success',
                        confirmButtonText: 'Cool'
                    }).then(() => {
                        window.location.href = '/productView'
                    })
                }
            })
            .catch(function (error) {
                console.log(error);
                Swal.fire({
                    title: 'Something went wrong',
                    text: error.response.data.message,
                    icon: 'error',
                    confirmButtonText: 'Login '
                }).then(() => {
                    window.location.href = '/loginView'
                })
            });
    }

    function addImg(productId) {
        const files = document.getElementById(`images-${productId}`)
        const formData = new FormData();
        for (let i = 0; i < files.files.length; i++) {
            formData.append('images', files.files[i]);
        }
        axios.post('/api/product/images/' + productId, formData, {
            headers: {
                'Content-Type': 'multipart/form-data'
            }
        })
            .then((response) => {
                if (response.status == 200)
                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        title: 'Success',
                        text: response.data.message,
                        showConfirmButton: false
                    }).then(() => {
                        location.reload();
                    })
                else {
                    Swal.fire({
                        position: 'center',
                        icon: 'error',
                        title: 'Error',
                        text: response.data.message,
                        showConfirmButton: false
                    })
                }
            })
    }

    function mainImg(id) {
        const defaultImg = id.split('-')[1];
        axios.post('/api/product/default_image/' + defaultImg)
            .then(function (response) {
                console.log("ðŸš€ ~ file: product.ejs ~ line 264 ~ response", response)
                if (response.status === 200) {
                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        title: response.data.message,
                        showConfirmButton: false
                    }).then(function () {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Something went wrong',
                        text: response.data.message,
                        icon: 'error',
                        confirmButtonText: ' Not cool'
                    })
                }
            })
            .catch(function (error) {
                console.log(error);
            });
    }

    function deleteProduct(id) {
        axios.delete('/api/product/' + id)
            .then(function (response) {
                console.log(response);
                if (response.status === 200) {
                    Swal.fire({
                        position: 'center',
                        title: 'Deleted!',
                        text: response.data.message,
                        icon: 'success',
                        confirmButtonText: 'Cool'
                    }).then(() => {
                        location.reload();
                    })
                } else {
                    Swal.fire({
                        title: 'Something went wrong',
                        text: response.data.message,
                        icon: 'error',
                        confirmButtonText: ' Not cool'
                    })
                }
            })
            .catch(function (error) {
                console.log(error);
            });
    }
</script>

</html>