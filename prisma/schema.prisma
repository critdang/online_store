// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

model Admin {
  id        Int      @id @default(autoincrement())
  email        String @unique  
  fullname     String?   @db.VarChar(255)
  password     String   @db.VarChar(255)
  address     String?   @db.VarChar(255)
  avatar     String?   @db.VarChar(255)
  phone     String?   @db.VarChar(255)
  birthday     String?   @db.VarChar(255)
  gender     Gender   @default(Male)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  email        String @unique 
  fullname     String?   @db.VarChar(255)
  password     String   @db.VarChar(255)
  address     String?   @db.VarChar(255)
  avatar     String?   @db.VarChar(255)
  phone     String?   @db.VarChar(255)
  birthday     String?   @db.VarChar(255)
  gender     Gender   @default(Female)
  resetToken String? @db.VarChar(255)
  is_active     Boolean   @default(false)
  is_blocked     Boolean   @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order  Order[]
  cart Cart[]
}

enum Gender {
  Male
  Female
}


model Order {
  id     Int     @id @default(autoincrement())
  user     User     @relation(fields:[userId],references: [id])
  userId     Int
  status     Status     @default(pending)
  paymentMethod     String     @db.VarChar(255)
  paymentDate     String     @db.VarChar(255)
  productInOrder ProductInOrder[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Status {
  pending
  completed
}

model ProductInOrder {
  id     Int     @id @default(autoincrement())
  order     Order     @relation(fields:[orderId],references: [id])
  orderId   Int
  product Product @relation(fields:[productId],references: [id])
  productId Int
  quantity     Int
  price         Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductImage {
  id     Int     @id @default(autoincrement())
  href     String     @db.VarChar(255)
  is_default Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product Product @relation(fields:[productId],references: [id])
  productId Int
}

model Product {
  id     Int     @id @default(autoincrement())
  name     String     @db.VarChar(255)
  description     String     @db.VarChar(255)
  price     Decimal
  amount     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  categoryProduct CategoryProduct[]
  cartProduct CartProduct[]
  productImage ProductImage[]
  productInOrder ProductInOrder[]
}

model CategoryProduct {
  // id     Int     @id @default(autoincrement())
  product Product     @relation(fields:[productId],references: [id])
  productId     Int
  category  Category @relation(fields:[categoryId],references: [id])
  categoryId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@id([productId, categoryId])
}

model Category {
  id     Int     @id @default(autoincrement())
  name     String     @db.VarChar(255)
  thumbnail     String @db.VarChar(255)    
  description     String     @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  categoryProduct CategoryProduct[]
}

model CartProduct {
  id     Int     @id @default(autoincrement())
  product Product     @relation(fields:[productId],references: [id])
  productId     Int
  quantity Int
  cart Cart  @relation(fields:[cartId],references: [id])
  cartId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Cart {
  id     Int     @id @default(autoincrement())
  user    User     @relation(fields:[userId],references: [id])
  userId     Int
  cartProduct CartProduct[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
